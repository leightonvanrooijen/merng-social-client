{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/leighton/Documents/VScode/merngSocialSite/merng-client/src/pages/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction SinglePost(props) {\n  _s();\n\n  const postId = props.match.params.postId;\n  console.log(postId);\n  const {\n    data: {\n      getPost\n    }\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n  let postMarkup;\n\n  if (!getPost) {\n    postMarkup = /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 18\n    }, this);\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = getPost;\n    postMarkup = /*#__PURE__*/_jsxDEV(Grid, {\n      container: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(SinglePost, \"pzTKq0HUDhfY8ZUd0F4vC2SBuow=\", false, function () {\n  return [useQuery];\n});\n\n_c = SinglePost;\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      commentCount\n      likes {\n        username\n      }\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/leighton/Documents/VScode/merngSocialSite/merng-client/src/pages/SinglePost.js"],"names":["React","gql","useQuery","Grid","CircularProgress","SinglePost","props","postId","match","params","console","log","data","getPost","FETCH_POST_QUERY","variables","postMarkup","id","body","createdAt","username","comments","likes","likeCount","commentCount"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,MAAlC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,QAAM;AAAEK,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAAuBX,QAAQ,CAACY,gBAAD,EAAmB;AACtDC,IAAAA,SAAS,EAAE;AACTR,MAAAA;AADS;AAD2C,GAAnB,CAArC;AAMA,MAAIS,UAAJ;;AACA,MAAG,CAACH,OAAJ,EAAY;AACVG,IAAAA,UAAU,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAb;AACD,GAFD,MAEO;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA,QAAvB;AAAiCC,MAAAA,QAAjC;AAA2CC,MAAAA,KAA3C;AAAkDC,MAAAA,SAAlD;AAA6DC,MAAAA;AAA7D,QAA8EX,OAApF;AAEAG,IAAAA,UAAU,gBACR,QAAC,IAAD;AAAM,MAAA,SAAS;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF;;GAtBQX,U;UAIsBH,Q;;;KAJtBG,U;AAwBT,MAAMS,gBAAgB,GAAGb,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAsBA,eAAeI,UAAf","sourcesContent":["import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Grid from \"@material-ui/core/Grid\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\n\nfunction SinglePost(props) {\n  const postId = props.match.params.postId;\n  console.log(postId)\n\n  const { data: { getPost }} = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  })\n\n  let postMarkup;\n  if(!getPost){\n    postMarkup = <CircularProgress />\n  } else {\n    const { id, body, createdAt, username, comments, likes, likeCount, commentCount } = getPost\n    \n    postMarkup = (\n      <Grid container>\n        \n      </Grid>\n    )\n  }\n}\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      commentCount\n      likes {\n        username\n      }\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}